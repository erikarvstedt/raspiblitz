	access_log /var/log/nginx/access_mempool.log;
	error_log /var/log/nginx/error_mempool.log;

	root /var/www/mempool/browser;

	index index.html;

	## copied from mempool/nginx/mempool/location-webui.conf

	# for exact / requests, redirect based on $lang
	# cache redirect for 10 minutes
	location = / {
		if ($lang != '') {
			return 302 $scheme://$host/$lang$uri;
		}
		try_files /en-US/index.html =404;
		expires 10m;
	}

	# used to rewrite resources from /<lang>/ to /en-US/
	# cache /resources/** for 1 week since they don't change often
	location ~ ^/[a-z][a-z]/resources/(.*) {
		try_files $uri /en-US/resources/$1 =404;
	    expires 1w;
	}
	# cache /<lang>/main.f40e91d908a068a2.js forever since they never change
	location ~ ^/([a-z][a-z])/(.+\..+\.(js|css)) {
		try_files $uri =404;
		expires 1y;
	}
	# cache everything else for 10 minutes
	location ~ ^/([a-z][a-z])$ {
		try_files $uri /$1/index.html /en-US/index.html =404;
	    expires 10m;
	}
	location ~ ^/([a-z][a-z])/ {
		try_files $uri /$1/index.html /en-US/index.html =404;
	    expires 10m;
	}

	# cache /resources/** for 1 week since they don't change often
	location /resources {
		try_files $uri /en-US/$uri /en-US/index.html;
		expires 1w;
	}
	# cache /main.f40e91d908a068a2.js forever since they never change
	location ~* ^/.+\..+\.(js|css) {
		try_files /$lang/$uri /en-US/$uri =404;
		expires 1y;
	}
	# catch-all for all URLs i.e. /address/foo /tx/foo /block/000
	# cache 10 minutes since they change frequently
	location / {
		try_files /$lang/$uri $uri /en-US/$uri /en-US/index.html =404;
		expires 10m;
	}


	# static API docs
	location = /api {
		try_files $uri $uri/ /en-US/index.html =404;
	}
	location = /api/ {
		try_files $uri $uri/ /en-US/index.html =404;
	}

	# mainnet API
	location /api/v1/donations {
		resolver 1.1.1.1;
		proxy_pass https://mempool.space;
	}
	location /api/v1/donations/images {
		resolver 1.1.1.1;
		proxy_pass https://mempool.space;
	}
	location /api/v1/ws {
		proxy_pass http://127.0.0.1:8999/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}
	location /api/v1 {
		proxy_pass http://127.0.0.1:8999/api/v1;
	}
	location /api/ {
		proxy_pass http://127.0.0.1:8999/api/v1/;
	}

	# mainnet API
	location /ws {
		proxy_pass http://127.0.0.1:8999/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}
